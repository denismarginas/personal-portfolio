@import "../../functions/mixins.scss";
@import "../../functions/functions.scss";

.dm-resume-data {


  > container {
    > ul {
      @include reset-list();
      @include padding-x();
      display: grid;
      align-items: center;
      grid-template-columns: 1fr 1.3fr;
      gap: var( --dm-spacing-secondary );

      > li {
        &:first-of-type {
          > ul {
            @include reset-list();
            display: grid;
            align-items: center;
            grid-template-columns: repeat(2, 1fr);
            gap: var( --dm-spacing-secondary );

            > .cv-card {
              @include border-radius( var( --dm-border-radius-primary ) );
              display: grid;
              align-items: center;
              grid-template-columns: 1fr 2fr;
              gap: var( --dm-spacing-primary );
              background-color: rgba( var( --dm-color-primary-rgb ) , 0.2);
              padding: var( --dm-spacing-primary );
              

              > img {
                width: 100%;
                height: auto;
                background-color: rgba( var( --dm-color-gray-rgb ) , 0.2);
                border: 1px solid rgba( var( --dm-color-gray-rgb ) , 0.2);
              }
              > div {
                @include flex-column();

                > a {
                  @include dm-font-big();
                  --dm-text-big-font-weight: 600;

                }
                > span {
                  @include dm-font-small();
                  margin-bottom: var( --dm-spacing-primary );
                }
                > button {
                  @include dm-font-small();
                }
              }
            }
          }
        }
        &:last-of-type {
          @include flex-column();
          gap: var( --dm-spacing-secondary );

          > img {
            width: 100%;
            height: auto;
            margin-top: -300px;
          }
        }
      }
    }
  }
  @media only screen and (max-width: $screen-desktop-medium) {
    > container {
      > ul {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  }
  @media only screen and (max-width: $screen-tablet-large) {
    > container {
      > ul {
        grid-template-columns: repeat(1, 1fr);
      }
    }
  }
  @media only screen and (max-width: $screen-phone-large) {
    > container {
      > ul {
        grid-template-columns: repeat(1, 1fr);

        > li {
          &:first-of-type {
            > ul {
              grid-template-columns: repeat(1, 1fr);
            }
          }
        }
      }
    }
  }
}

body, body.theme-light {
  .dm-contact-data {
    > container {

    }
  }
}
body.theme-dark {
  .dm-contact-data {
    > container {
    }
  }
}
