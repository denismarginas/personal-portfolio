@import "../../functions/mixins.scss";
@import "../../functions/functions.scss";

#post-list-sort-and-search {
  @include padding-x();
  margin-bottom: var( --dm-spacing-secondary );

  > ul {
    @include reset-list();
    @include border-radius( var( --dm-border-radius-primary ) );
    background-color: var( --dm-color-secondary );
    padding: var( --dm-spacing-secondary );
    display: grid;
    align-items: end;
    grid-template-columns: 2fr 1fr;
    gap: var( --dm-spacing-secondary );

    > li {
      @include flex-row();
      gap: var( --dm-spacing-primary );

      &:first-of-type {
        justify-content: start;
        flex-wrap: wrap;
      }
      &:last-of-type {
        justify-content: end;
      }
      > .filter {
        display: flex;
        flex-direction: column;
        gap: calc( var( --dm-spacing-primary ) / 3 );
        max-width: 150px;

        > label {
          @include dm-font-medium();
          --dm-text-medium-color: var( --dm-color-white );
          --dm-text-medium-font-weight: 600;
        }
      }
      select, > input, > input:focus, > input:focus-visible {
        @include limit-line-text(1);
        @include border-radius( var( --dm-border-radius-primary ) );
        @include dm-font-medium();
        padding: 4px 8px;
        border: 2px solid var( --dm-color-white );
        background-color: var( --dm-color-white );
        outline: none;
        word-break: break-all;
      }
      select {
        width: 100%;

        > option {
          @include dm-font-medium();
          --dm-text-medium-color: var( --dm-color-white );
          padding: 4px 8px;
          border: 1px solid var( --dm-color-white );
          background-color: var( --dm-color-primary );
          outline: none;
          word-break: break-all;

          &::selection, &:checked {
            background-color: var( --dm-color-white );
            --dm-text-medium-color: var( --dm-color-primary );
          }
          &:hover, &:focus, &:active {
            background-color: var( --dm-color-secondary );
            --dm-text-medium-color: var( --dm-color-white );
          }
        }
      }


      > .post-search {
        width: 100%;
      }
      > .post-search-submit {
        @include dm-button();
        @include dm-font-medium();
        --dm-text-medium-color: var( --dm-color-white );
        border: 2px solid var( --dm-color-white );
        background-color: var( --dm-color-primary );
        border-radius:  var( --dm-border-radius-primary ) !important;

        &:hover {
          background-color: var( --dm-color-secondary);
        }
      }
    }
  }
}
@media only screen and (max-width: $screen-desktop-medium) {
  #post-list-sort-and-search {
    > ul {
      grid-template-columns: repeat(1, 1fr);
      gap: var( --dm-spacing-primary );

      > li {
        > .filter {
          max-width: unset;
          width: calc((100%/3) - ( var( --dm-spacing-primary ) /1.5 ) );
        }
      }
    }
  }
}
@media only screen and (max-width: $screen-desktop-small) {
  #post-list-sort-and-search {
    > ul {
      grid-template-columns: repeat(1, 1fr);
      gap: var( --dm-spacing-primary );

      > li {
        > .filter {
          width: calc((100%/3) - ( var( --dm-spacing-primary ) /1.5 ) );
          max-width: unset;

          &:nth-child(4), &:nth-child(5), &:nth-child(6), &:nth-child(7) {
            width: 100%;
          }
        }
        > .post-search-submit {
          width: 100%;
        }
      }
    }
  }
}
@media only screen and (max-width: $screen-phone-large) {
  #post-list-sort-and-search {
    > ul {
      > li {
        &:first-of-type {
          > .filter {
            width: 100%;
          }
        }
        &:last-of-type {
          flex-wrap: wrap;
        }
      }
    }
  }
}

body {
  #post-list-sort-and-search {
    display: none;
  }
}
body[java-script="true"] {
  #post-list-sort-and-search {
    display: block;
  }
}

body, body.theme-light {

}
body.theme-dark {

}
